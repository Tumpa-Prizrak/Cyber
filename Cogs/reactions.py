import discord
from discord.ext import commands
import aiohttp
import ujson
from random import randint
import config as c
import typing
class ReactionsCommand(commands.Cog):
    def __init__(self, client):
        self.client = client
        self.session = aiohttp.ClientSession(json_serialize=ujson)
        self.runame = '–†–µ–∞–∫—Ü–∏–∏'
    
    async def cog_command_error(self, ctx, error):
        chel = '<–ß–µ–ª–æ–≤–µ–∫>'
        if isinstance(error, commands.MissingRequiredArgument):
            qu = '[{}]' if ctx.command.__defaults__[1] is None else '<{}>'
            emb = discord.Embed(title=f"–ü–∞—Ä–∞–º–µ—Ç—Ä {qu.format(chel if error.param.name=='person' else error.param.name)} –ø—Ä–æ–ø—É—â–µ–Ω",
                                description=f'–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: {ctx.command.usage}',
                                colour=discord.colour.Colour.red())
            await ctx.send(embed=emb)

    async def get_gif(self, param):
        async with self.session.get(f"https://g.tenor.com/v1/search?q={param.replace(' ', '%20')}&key={c.apikey}&limit={str(c.limit)}") as r:
            if r.status == 200:
                while 1:
                    try:
                        return (await r.json())["results"][randint(0, c.limit)]["media"][0]['gif']['url']
                    except IndexError: continue
            else:
                return r.status

    async def build_embed(self, r, author, action, target=None):
        if target is not None:
            if author == target:
                return discord.Embed(title="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ —Å —Å–æ–±–æ–π  :sob:", colour=discord.colour.Colour.red())
        if not isinstance(r, int):
            return discord.Embed(title=f"{author.name} {action} {target.name if target is not None else '\b'}",
                                colour=discord.colour.Colour.green()).set_image(url=r)
        else:
            return discord.Embed(title=f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ö–æ–¥ –æ—à–∏–±–∫–∏: {r}",
                                colour=discord.colour.Colour.red())

    @commands.command(usage = 'baka <–ß–µ–ª–æ–≤–µ–∫>', brief = '–û—Ç—Ä—É–≥–∞—Ç—å –∫–æ–≥–æ-—Ç–æ')
    async def baka(self, ctx, person: typing.Union[discord.Member, str]):
        r = await self.get_gif('anime baka')
        emb = await self.build_embed(r, ctx.autrhor, '—Ä—É–≥–∞–µ—Ç', person)
        await ctx.send(embed=emb)

    @commands.command(usage = 'bangHead', brief = '–î–æ–ª–±–∏—Ç—å—Å—è –≥–æ–ª–æ–≤–æ–π –æ–± —Å—Ç–µ–Ω—É')
    async def bangHead(self, ctx):
        r = await self.get_gif('anime bang head')
        emb = await self.build_embed(r, ctx.autrhor, '–±—å—ë—Ç—Å—è –≥–æ–ª–æ–≤–æ–π –æ —Å—Ç–µ–Ω—É')
        await ctx.send(embed=emb)

    @commands.command(usage = 'bite <–ß–µ–ª–æ–≤–µ–∫>', brief = '–£–∫—É—Å–∏—Ç—å –∫–æ–≥–æ-—Ç–æ')
    async def bite(self, ctx, person: typing.Union[discord.Member, str]):
        r = await self.get_gif('anime bite')
        emb = await self.build_embed(r, ctx.autrhor, '—É–∫—É—Å–∏–ª(–∞)', person)
        await ctx.send(embed=emb)

    @commands.command(usage = 'blush', brief = '–ü–æ–∫—Ä–∞—Å–Ω–µ—Ç—å')
    async def blush(self, ctx):
        r = await self.get_gif('anime blush')
        emb = await self.build_embed(r, ctx.autrhor, '–∫—Ä–∞—Å–Ω–µ–µ—Ç')
        await ctx.send(embed=emb)

    @commands.command(usage = 'cry', brief = '–ü–æ–ø–ª–∞–∫–∞—Ç—å. –ù–µ –Ω–∞–¥–æ –ø–ª–∞–∫–∞—Ç—å :(')
    async def cry(self, ctx):
        r = await self.get_gif('anime cry')
        emb = await self.build_embed(r, ctx.autrhor, '–ø–ª–∞—á–µ—Ç')
        await ctx.send(embed=emb)

    @commands.command(usage = 'cuddle <–ß–µ–ª–æ–≤–µ–∫>', brief = '–ü—Ä–∏–∂–∞—Ç—å—Å—è –∫ –∫–æ–º—É-—Ç–æ')
    async def cuddle(self, ctx, person: typing.Union[discord.Member, str]):
        r = await self.get_gif('anime cuddlele')
        emb = await self.build_embed(r, ctx.autrhor, '–ø—Ä–∏–∂–∞–ª—Å—è(–∞—Å—å) –∫', person)
        await ctx.send(embed=emb)

    @commands.command(usage = 'dance [–ß–µ–ª–æ–≤–µ–∫]', brief = '–ü–æ—Ç–∞–Ω—Ü–µ–≤–∞—Ç—å —Å –∫–µ–º-—Ç–æ –∏–ª–∏ –≤ –æ–¥–∏–Ω–æ—á–∫—É')
    async def dance(self, ctx, person: typing.Union[discord.Member, str] = None):
        r = await self.get_gif('anime dance')
        emb = await self.build_embed(r, ctx.autrhor, '—Ç–∞–Ω—Ü—É–µ—Ç' if person is None else '—Ç–∞–Ω—Ü—É–µ—Ç —Å', person)
        await ctx.send(embed=emb)

    @commands.command(usage = 'drink [–ß–µ–ª–æ–≤–µ–∫]', brief = '–ë–£–•–ê–ï–ú!!! –í—ã–ø–∏—Ç—å –Ω–∞–ø–∏—Ç–æ–∫. –° –¥—Ä—É–≥–æ–º –∏–ª–∏ –±–µ–∑')
    async def drink(self, ctx, person: typing.Union[discord.Member, str] = None):
        r = await self.get_gif('anime drink tea')
        emb = await self.build_embed(r, ctx.autrhor, '–ø—å—ë—Ç' if person is None else '–ø—å—ë—Ç —Å', person)
        await ctx.send(embed=emb)

    @commands.command(usage = 'feed <–ß–µ–ª–æ–≤–µ–∫>', brief = '–ü–æ–∫–æ—Ä–º–∏—Ç—å –∫–æ–≥–æ-—Ç–æ')
    async def feed(self, ctx, person: typing.Union[discord.Member, str]):
        r = await self.get_gif('anime feed')
        emb = await self.build_embed(r, ctx.autrhor, '–ø–æ–∫–æ—Ä–º–∏–ª(–∞)', person)
        await ctx.send(embed=emb)

    @commands.command(usage = 'five <–ß–µ–ª–æ–≤–µ–∫>', brief = '–ü—è—Ç—é–Ω—é? –î–∞—Ç—å "–ø—è—Ç—å" –∫–æ–º—É-—Ç–æ')
    async def five(self, ctx, person: typing.Union[discord.Member, str]):
        r = await self.get_gif('anime high five')
        emb = await self.build_embed(r, ctx.autrhor, '–¥–∞–ª(–∞) –ø—è—Ç—å', person)
        await ctx.send(embed=emb)

    @commands.command(usage = 'flip', brief = '–°–¥–µ–ª–∞—Ç—å -100000 —Ö–ø —Å—Ç–æ–ª—É. –û–π, —Ç–æ –µ—Å—Ç—å –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å –µ–≥–æ')
    async def flip(self, ctx):
        r = await self.get_gif('anime table flip')
        emb = await self.build_embed(r, ctx.autrhor, '–æ–ø—Ä–æ–∫–∏–Ω—É–ª(–∞) —Å—Ç–æ–ª')
        await ctx.send(embed=emb)

    @commands.command(usage = 'hit <–ß–µ–ª–æ–≤–µ–∫>', brief = '–î–∞—Ç—å –ø–æ —â–∞–º –∫–æ–º—É-–Ω–∏–±—É–¥—å')
    async def hit(self, ctx, person: typing.Union[discord.Member, str]):
        r = await self.get_gif('anime hit')
        emb = await self.build_embed(r, ctx.autrhor, '—É–¥–∞—Ä–∏–ª(–∞)', person)
        await ctx.send(embed=emb)

    @commands.command(usage = 'hug <–ß–µ–ª–æ–≤–µ–∫>', brief = '–û–±–Ω–∏–º–∞—à–∫–∏–∏–∏–∏–∏!!! –û–±–Ω–∏–º–µ–º –∫–æ–≥–æ-—Ç–æ?')
    async def hug(self, ctx, person: typing.Union[discord.Member, str]):
        r = await self.get_gif('anime hug')
        emb = await self.build_embed(r, ctx.autrhor, '–æ–±–Ω—è–ª(–∞)', person)
        await ctx.send(embed=emb)

    @commands.command(usage = 'innocent', brief = '–Ø —Ç–æ—á–Ω–æ –Ω–µ –∏–º–ø–æ—Å—Ç–µ—Ä, –Ω–µ, –Ω—É —Å–µ—Ä—å—ë–∑–Ω–æ :D')
    async def innocent(self, ctx):
        r = await self.get_gif('anime innocent')
        emb = await self.build_embed(r, ctx.autrhor, '–æ–ø—Ä–∞–≤–¥—ã–≤–∞–µ—Ç—Å—è')
        await ctx.send(embed=emb)

    @commands.command(usage = 'kill <–ß–µ–ª–æ–≤–µ–∫>', brief = '–†–ï–ó–ù–Ø! –£–±–∏—Ç—å –∫–æ–≥–æ-—Ç–æ')
    async def kill(self, ctx, person: typing.Union[discord.Member, str]):
        r = await self.get_gif('anime kill')
        emb = await self.build_embed(r, ctx.autrhor, '—É–±–∏–ª(–∞)', person)
        await ctx.send(embed=emb)

    @commands.command(usage = 'kiss <–ß–µ–ª–æ–≤–µ–∫>', brief = '–ü–æ—Ü–µ–ª—É–µ–º—Å—è —Å –∫–µ–º-—Ç–æ? \*—á–º–æ–∫*') # \* —á—Ç–æ–±—ã –Ω–µ –≤—ã–¥–µ–ª—è–ª–æ—Å—å –∫—É—Ä—Å–∏–≤–æ–º
    async def kiss(self, ctx, person: typing.Union[discord.Member, str]):
        r = await self.get_gif('anime kiss')
        emb = await self.build_embed(r, ctx.autrhor, '–ø–æ—Ü–µ–ª–æ–≤–∞–ª(–∞)', person)
        await ctx.send(embed=emb)

    @commands.command(usage = 'lick <–ß–µ–ª–æ–≤–µ–∫>', brief = '–õ–∏–∑–Ω–∏ –∫–æ–≥–æ-—Ç–æ)')
    async def lick(self, ctx, person: typing.Union[discord.Member, str]):
        r = await self.get_gif('anime lick')
        emb = await self.build_embed(r, ctx.autrhor, '–ª–∏–∑–Ω—É–ª(–∞)', person)
        await ctx.send(embed=emb)

    @commands.command(usage = 'pat <–ß–µ–ª–æ–≤–µ–∫>', brief = '–ö—Ç–æ —Ç—É—Ç —É –Ω–∞—Å —Ö–æ—Ä–æ—à–∏–π? –ê –Ω—É –∏–¥–∏ —Å—é–¥–∞, –ø–æ–≥–ª–∞–∂—É :)')
    async def pat(self, ctx, person: typing.Union[discord.Member, str]):
        r = await self.get_gif('anime pat')
        emb = await self.build_embed(r, ctx.autrhor, '–ø–æ–≥–ª–∞–¥–∏–ª(–∞)', person)
        await ctx.send(embed=emb)

    @commands.command(usage = 'poke <–ß–µ–ª–æ–≤–µ–∫>', brief = '–¢—ã–∫–Ω—É—Ç—å –≤ –∫–æ–≥–æ-—Ç–æ')
    async def poke(self, ctx, person: typing.Union[discord.Member, str]):
        r = await self.get_gif('anime poke')
        emb = await self.build_embed(r, ctx.autrhor, '—Ç—ã–∫–Ω—É–ª(–∞) –≤', person)
        await ctx.send(embed=emb)

    @commands.command(usage = 'scare <–ß–µ–ª–æ–≤–µ–∫>', brief = '–ë—É! –ù–∞–ø—É–≥–∞—Ç—å –∫–æ–≥–æ-—Ç–æ')
    async def scare(self, ctx, person: typing.Union[discord.Member, str]):
        r = await self.get_gif('anime scare')
        emb = await self.build_embed(r, ctx.autrhor, '–∏—Å–ø—É–≥–∞–ª(–∞)', person)
        await ctx.send(embed=emb)

    @commands.command(usage = 'slap <–ß–µ–ª–æ–≤–µ–∫>', brief = '–î–∞—Ç—å –ø–æ–¥—â—ë—á–∏–Ω—É –∫–æ–º—É-—Ç–æ')
    async def slap(self, ctx, person: typing.Union[discord.Member, str]):
        r = await self.get_gif('anime slap')
        emb = await self.build_embed(r, ctx.autrhor, '–¥–∞–ª(–∞) –ø–æ–¥—â—ë—á–∏–Ω—É', person)
        await ctx.send(embed=emb)

    @commands.command(usage = 'sleep', brief = '–ü–æ—Å–ø–∞—Ç—å. –°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏ üí§')
    async def sleep(self, ctx):
        r = await self.get_gif('anime sleep')
        emb = await self.build_embed(r, ctx.autrhor, '—Å–ø–∏—Ç')
        await ctx.send(embed=emb)

    @commands.command(usage = 'spank <–ß–µ–ª–æ–≤–µ–∫>', brief = '–£–¥–∞—Ä–∏—Ç—å –∫–æ–≥–æ-—Ç–æ... —Ç–∏–ø–∞ hit –∏–ª–∏ slap, –Ω–æ –Ω–µ hit –∏ –Ω–µ slap')
    async def spank(self, ctx, person: typing.Union[discord.Member, str]):
        r = await self.get_gif('anime spank')
        emb = await self.build_embed(r, ctx.autrhor, '—É–¥–∞—Ä–∏–ª(–∞)', person)
        await ctx.send(embed=emb)

    @commands.command(usage = 'tickle <–ß–µ–ª–æ–≤–µ–∫>', brief = '–ü–æ—â–µ–∫–æ—Ç–∞—Ç—å –∫–æ–≥–æ-—Ç–æ')
    async def tickle(self, ctx, person: typing.Union[discord.Member, str]):
        r = await self.get_gif('anime tickle')
        emb = await self.build_embed(r, ctx.autrhor, '–ø–æ—â–µ–∫–æ—Ç–∞–ª(–∞)', person)
        await ctx.send(embed=emb)

    @commands.command(usage = 'walk <–ß–µ–ª–æ–≤–µ–∫>', brief = '–•–æ–¥–∏—Ç—å, –≥—É–ª—è—Ç—å, –±—Ä–æ–¥–∏—Ç—å')
    async def walk(self, ctx, person: typing.Union[discord.Member, str] = None):
        r = await self.get_gif('anime walk')
        emb = await self.build_embed(r, ctx.autrhor, '–≥—É–ª—è–µ—Ç' if person is None else '–≥—É–ª—è–µ—Ç —Å', person)
        await ctx.send(embed=emb)

def setup(client):
    client.add_cog(ReactionsCommand(client))